/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        
        ListNode p(INT_MIN);
        ListNode* p1 = &p;

        while(l1 != NULL && l2 != NULL)
        {
            if(l1->val <= l2->val)
            {
                p1->next = l1;
                l1 = l1->next;
            }
            else
            {
                p1->next = l2;
                l2 = l2->next;
            }
            p1 = p1->next;
        }
        p1->next = l1?l1:l2;
        return p.next;
    }
};


//迭代算法
class Solution{
public:
  ListNode* mergeTwoLists(ListNode* l1, ListNode* l2){
    if(!l1) return l1;
    if(!l2) return l2;
    if(l1->val < l2->val){
      l1->next = mergeTwoLists(l1->next, l2);
      return l1;
    }
    else{
      l2->next = mergeTwoLists(l1, l2->next);
      return l2;
    }
  } 
}  
  
  
